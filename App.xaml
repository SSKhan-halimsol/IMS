<Application x:Class="IMS.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:IMS"
             StartupUri="Views/SplashWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            
            
            <!-- Sidebar Navigation Buttons -->
            <Style x:Key="NavigButtonStyle" TargetType="Button">
                <Setter Property="Margin" Value="15,5"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="20,0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#10B981"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#059669"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Logout Button -->
            <Style x:Key="LogoutButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigButtonStyle}">
                <Setter Property="Background" Value="#EF4444"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#DC2626"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#991B1B"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Input TextBox Style -->
            <Style x:Key="InputBoxStyle" TargetType="TextBox">
                <Setter Property="Margin" Value="0,6,0,12"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="#7CFC00"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <!-- Navigation Button -->
            <Style x:Key="NavButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="90"/>
                <Setter Property="Background" Value="#333"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Style.Triggers>
                    <!-- Highlight the selected/active button -->
                    <Trigger Property="Tag" Value="Active">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="BorderBrush" Value="#92d400"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="16"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Back Button -->
            <Style x:Key="BackButtonStyle" TargetType="Button" BasedOn="{StaticResource NavButtonStyle}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>

            <!-- Submit Button -->
            <Style x:Key="SubmitButtonStyle" TargetType="Button" BasedOn="{StaticResource NavButtonStyle}">
                <Setter Property="Background" Value="#7CFC00"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Width" Value="120"/>
            </Style>
            <!-- Colors -->
            <SolidColorBrush x:Key="InputBackgroundBrush" Color="#2E2E30"/>
            <SolidColorBrush x:Key="InputBorderBrush" Color="#4A4A4A"/>
            <SolidColorBrush x:Key="InputForegroundBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="AccentBrush" Color="#A6E22E"/>

            <!-- Small ToggleButton style used INSIDE the ComboBox template (avoids ComboBox.ToggleButtonStyleKey usage) -->
            <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Width" Value="22"/>
                <Setter Property="Height" Value="22"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="3" Padding="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Rounded TextBox -->
            <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource InputForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="6"/>
                <Setter Property="Margin" Value="0,4,0,10"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" Margin="0" Background="Transparent"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Rounded ComboBox (uses ComboBoxToggleButtonStyle) -->
            <Style x:Key="RoundedComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource InputForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Margin" Value="0,4,0,10"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <!-- Entire border area is clickable -->
                                <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">

                                    <Border.InputBindings>
                                        <MouseBinding Gesture="LeftClick"
                                      Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"/>
                                    </Border.InputBindings>
                                </Border>

                                <!-- ToggleButton: arrow part -->
                                <ToggleButton x:Name="ToggleButton"
                              HorizontalAlignment="Right"
                              Margin="0"
                              Style="{StaticResource ComboBoxToggleButtonStyle}"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                              ClickMode="Press" />

                                <!-- Selected content area -->
                                <ContentPresenter x:Name="ContentSite"
                                  Margin="8,0,30,0"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Stretch"
                                  IsHitTestVisible="False"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" />

                                <!-- Dropdown popup -->
                                <Popup x:Name="PART_Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Slide">
                                    <Border x:Name="PopupBorder"
                            Background="{StaticResource InputBackgroundBrush}"
                            BorderBrush="{StaticResource InputBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="5"
                            MinWidth="{TemplateBinding ActualWidth}">
                                        <ScrollViewer MaxHeight="200">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RoundedDatePickerStyle" TargetType="DatePicker">
                <Setter Property="Foreground" Value="{StaticResource InputForegroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="6"/>
                <Setter Property="Margin" Value="0,4,0,10"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePicker">
                            <Grid>
                                <!-- Outer border -->
                                <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Text Box -->
                                        <DatePickerTextBox x:Name="PART_TextBox"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               Foreground="{TemplateBinding Foreground}"
                                               FontSize="{TemplateBinding FontSize}"
                                               VerticalContentAlignment="Center"
                                               Margin="6,0,0,0"/>

                                        <!-- Calendar Button -->
                                        <Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Width="32"
                                    Height="28"
                                    Margin="2"
                                    Padding="0"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    Cursor="Hand"
                                    VerticalAlignment="Center">
                                            <TextBlock Text="📅"
                                           FontSize="16"
                                           Foreground="{TemplateBinding Foreground}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"/>
                                        </Button>
                                    </Grid>
                                </Border>

                                <!-- Calendar Popup -->
                                <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           StaysOpen="False"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                                    <Border CornerRadius="6"
                                Background="#1e1e1e"
                                BorderBrush="{StaticResource AccentBrush}"
                                BorderThickness="1">
                                        <Calendar x:Name="PART_Calendar"
                                      Foreground="{StaticResource InputForegroundBrush}"
                                      Background="#1e1e1e"
                                      BorderThickness="0"
                                      SelectionMode="SingleDate"
                                      IsTodayHighlighted="True"/>
                                    </Border>
                                </Popup>
                            </Grid>

                            <!-- Triggers -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Buttons -->
            <Style x:Key="AccentButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="#1E1E1E"/>
                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#C0F00F"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#8FC80F"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SecondaryButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{StaticResource InputForegroundBrush}"/>
                <Setter Property="Background" Value="#3C3C3C"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                                    <Setter Property="Foreground" Value="#1E1E1E"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#8FC80F"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="OptionButtonStyle" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border x:Name="border"
                            CornerRadius="6"
                            Background="#1E1E1E"
                            BorderBrush="#555"
                            BorderThickness="1"
                            Padding="12"
                            Margin="6">
                                <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          TextBlock.Foreground="White"
                                          TextBlock.FontSize="16"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#333"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#92d400"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#92d400"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#92d400"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        </ResourceDictionary>
    </Application.Resources>
</Application>